#include <iostream> 
#include <regex> 
#include<string.h> 
using namespace std;

int main()
{
    string s;
    cmatch result;
    cout << "Warning! I use ',' in float" << endl;
    cout << "20 <= n <= 79 && n % 2 == 0" << endl;
    cin >> s;
    regex regular("(2|3|4|5|6|7)(0|2|4|6|8)");
    if (regex_match(s.c_str(), result, regular)) cout << "YES" << endl;
    else cout << "NO" << endl;
    cout << "simple float" << endl;
    cin >> s;
    regular = regex("[0-9]*,[0-9]*");
    if (regex_match(s.c_str(), result, regular)) cout << "YES" << endl;
    else cout << "NO" << endl;
    cout << "float without first meaningless \'0\'" << endl;
    cin >> s;
    regular = regex("([1-9][0-9]*,[0-9]*)|(0,[0-9]*)");
    if (regex_match(s.c_str(), result, regular)) cout << "YES" << endl;
    else cout << "NO" << endl;
    cout << "float without meaningless \'0\'" << endl;
    cin >> s;
    regular = regex("([1-9][0-9]*,[0-9]*[1-9])|(0,[0-9]*[1-9])|([1-9][0-9]*,)|0,");
    if (regex_match(s.c_str(), result, regular)) cout << "YES" << endl;
    else cout << "NO" << endl;
    cout << "float that can be less then 0" << endl;
    cin >> s;
    //regular = regex("((-|())(([1-9][0-9]*,[0-9]*[1-9])|(0,[0-9]*[1-9])|([1-9][0-9]*,)|0,)) | (([1-9][0-9]*) | 0) | (,(([0-9]*[1-9])|0))");
    regular = regex("(-?)(([1-9][0-9]*,[0-9]*[1-9])|(0,[0-9]*[1-9])|([1-9][0-9]*,)|0,)");
    if (regex_match(s.c_str(), result, regular)) cout << "YES" << endl;
    else cout << "NO" << endl;
    cout << "ip" << endl;
    cin >> s;
    regular = regex("([0-9]|([1-9][0-9])|(1[0-9][0-9])|(2[0-4][0-9])|(25[0-5])).([0-9]|([1-9][0-9])|(1[0-9][0-9])|(2[0-4][0-9])|(25[0-5])).([0-9]|([1-9][0-9])|(1[0-9][0-9])|(2[0-4][0-9])|(25[0-5])).([0-9]|([1-9][0-9])|(1[0-9][0-9])|(2[0-4][0-9])|(25[0-5]))");
    if (regex_match(s.c_str(), result, regular)) cout << "YES" << endl;
    else cout << "NO" << endl;
    return 0;
}
